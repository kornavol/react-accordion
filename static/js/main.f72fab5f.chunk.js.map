{"version":3,"sources":["assets/icons/chevron-down.svg","components/shared/Accodrion/AccordItem/AccordionItem.tsx","components/shared/Accodrion/Accordion.tsx","db/data.ts","App/App.tsx","index.tsx"],"names":["_path","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgChevronDown","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","AccordionItem","data","onClickHandler","styles","show","className","onClick","identifier","properties","parse","text","Accordion","nodes","getPageById","childNodes","useState","setShow","type","map","node","toogle","memo","headline","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f72fab5f.chunk.js","sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChevronDown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 9,\n    viewBox: \"0 0 14 9\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 1.71743L12.3491 0L7 5.56508L1.65085 0L0 1.71743L7 9L14 1.71743Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronDown);\nexport default __webpack_public_path__ + \"static/media/chevron-down.811f7256.svg\";\nexport { ForwardRef as ReactComponent };","import parse from 'html-react-parser'\r\n\r\nimport './style.scss'\r\n/* A way how import an svg to the project */\r\nimport { ReactComponent as Chevron } from 'assets/icons/chevron-down.svg'\r\n\r\nimport { childNodes } from 'types/db'\r\n\r\ninterface Iprops {\r\n  data: childNodes\r\n  /* This is a syntax to typization an arrow function */\r\n  onClickHandler: (id: string) => void\r\n  show: boolean\r\n  styles: string\r\n}\r\n\r\n/* We don't need to use a FC if component does't have children */\r\n// const AccordionItem: FC<Iprops> = ({ data, onClickHandler, styles, show }) => {\r\nconst AccordionItem = ({ data, onClickHandler, styles, show }: Iprops) => {\r\n  return (\r\n    <li key={data.identifier} className={`${styles}-accordion-item`}>\r\n      <div\r\n        className=\"title-group\"\r\n        onClick={() => onClickHandler(data.identifier)}\r\n      >\r\n        <h4 className=\"title\">\r\n          {data?.properties?.title || <p>'So far, there are no title'</p>}\r\n        </h4>\r\n        <div className={`chevron ${show ? 'rotate' : ''}`}>\r\n          <Chevron className=\"chevron\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`accordion-item-text ${show ? 'show' : 'hide'}`}>\r\n        {parse(data?.properties?.text) || <p>'So far, there are no text'</p>}\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\n/* !!! We don't to need use a memo if the component is static and doesn't have children */\r\nexport default AccordionItem\r\n// export default memo(AccordionItem)\r\n","import { FC, memo, useState } from 'react'\r\n\r\nimport './style.scss'\r\nimport AccordionItem from './AccordItem/AccordionItem'\r\n\r\nimport { Idb } from 'types/db'\r\n\r\ninterface Iprops {\r\n  data: Idb\r\n}\r\n\r\nconst Accordion: FC<Iprops> = ({ data }) => {\r\n  const nodes: any[] = data?.getPageById?.childNodes\r\n  const [show, setShow] = useState<null | string>(null)\r\n  const styles = data?.getPageById?.type\r\n\r\n  const onClickHandler = (id: string): void => {\r\n    if (show === id) setShow(null)\r\n    else setShow(id)\r\n  }\r\n\r\n  return (\r\n    <ul className=\"accordion\">\r\n      {nodes.map((node: any) => {\r\n        const toogle: boolean = show === node.identifier ? true : false\r\n        return (\r\n          <AccordionItem\r\n            data={node}\r\n            onClickHandler={onClickHandler}\r\n            show={toogle}\r\n            styles={styles}\r\n          />\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default memo(Accordion)\r\n","import { Idb } from 'types/db'\r\n\r\nexport const data: Idb = {\r\n  getPageById: {\r\n    identifier: '350e5c23-5bcf-4fbf-9d18-afb987753e98',\r\n    type: 'RBLSiteContentAccordion',\r\n    properties: {\r\n      headline: 'Accordion Module'\r\n    },\r\n    childNodes: [\r\n      {\r\n        identifier: '779a45f4-7892-4e57-b0f3-80b3e84c29f6',\r\n        type: 'RBLSiteContentAccordionItem',\r\n        properties: {\r\n          title: 'Natürlich freue ich mich über',\r\n          text: '<p>Einwohner nur eingeschränkt stattfinden.</p><p>Wir haben es in der neuen Königsklassen-Saison an. Zu Gast in der neuen <b>Königsklassen-Saison</b> an. Zu Gast in der Lage dazu, unser.</p>'\r\n        },\r\n        childNodes: []\r\n      },\r\n      {\r\n        identifier: 'aa1ba7e1-b79d-41ab-bb6d-140f79547276',\r\n        type: 'RBLSiteContentAccordionItem',\r\n        properties: {\r\n          title: 'Halbzeit gegen Augsburg',\r\n          text: '<p>Step – das ist auch das erste, was man in der vergangenen Saison. Wir haben es in der neuen Königsklassen-Saison an. Zu Gast in der neuen <b>Königsklassen-Saison</b> an. Zu Gast in der Lage dazu, unser.</p>'\r\n        },\r\n        childNodes: []\r\n      },\r\n      {\r\n        identifier: '5f54c8f6-2097-4ed3-b1b1-584f1baed3f1',\r\n        type: 'RBLSiteContentAccordionItem',\r\n        properties: {\r\n          title: 'Top-Leistung abgeliefert',\r\n          text: '<p>Wir sind darauf aber mehr als gut vorbereitet und haben uns im Mittelfeld zu wenig bewegt. <u>Gerade</u> mit Ball hätten wir alle aktiver sein müssen.</p><img src=\"https://placekitten.com/200/200\" alt=\"kitten\" /><p>Man hat gesehen, dass der ein oder andere bereits.</p>'\r\n        },\r\n        childNodes: []\r\n      },\r\n      {\r\n        identifier: '779a45f4-7882-4e57-b0f3-80b3e84c29f6',\r\n        type: 'RBLSiteContentAccordionItem',\r\n        properties: {\r\n          title: 'Das Team',\r\n          text: '<p>Step – das ist auch das erste, was man in der vergangenen Saison. Wir haben es in der neuen Königsklassen-Saison an. Zu Gast in der neuen <b>Königsklassen-Saison</b> an. Zu Gast in der Lage dazu, unser.</p><p>Einwohner nur eingeschränkt stattfinden.</p>'\r\n        },\r\n        childNodes: []\r\n      },\r\n      {\r\n        identifier: 'aa1ba8e1-b79d-41ab-bb6d-140f79547276',\r\n        type: 'RBLSiteContentAccordionItem',\r\n        properties: {\r\n          title: 'Kein Teamtraining möglich',\r\n          text: '<p>Step – das ist auch das erste, was man in der vergangenen Saison. Wir haben es in der neuen Königsklassen-Saison an. Zu Gast in der neuen <b>Königsklassen-Saison</b> an. Zu Gast in der Lage dazu, unser.</p>'\r\n        },\r\n        childNodes: []\r\n      },\r\n      {\r\n        identifier: '5f54c8f6-2097-4ed3-c1b1-584f1baed3f1',\r\n        type: 'RBLSiteContentAccordionItem',\r\n        properties: {\r\n          title:\r\n            'Top-Leistung abliefert. Er hat noch ein bisschen was zu tun, das ist auch das erste, was man in der vergangenen Saison.',\r\n          text: '<p>Wir sind darauf aber mehr als gut vorbereitet und haben uns im Mittelfeld zu wenig bewegt. <u>Gerade</u> mit Ball hätten wir alle aktiver sein müssen.</p><img src=\"https://placekitten.com/200/200\" alt=\"kitten\" /><p>Man hat gesehen, dass der ein oder andere bereits.</p>'\r\n        },\r\n        childNodes: []\r\n      }\r\n    ]\r\n  }\r\n}\r\n","import Accordion from 'components/shared/Accodrion/Accordion'\nimport { data } from 'db/data'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Accordion task</h1>\n      {data ? <Accordion data={data} /> : null}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}